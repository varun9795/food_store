{"ast":null,"code":"import * as actionTypes from './food-types';\n\nconst foodReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload; //const existItem=state.cartItems.find(prod=>prod.id===action.payload.id);\n\n      const inCart = state.cartItems.find(prod => prod.id === item.id ? true : false);\n\n      if (inCart) {\n        return { ...state,\n          cartItems: state.cartItems.map(prod => prod.id === item.id ? { ...prod,\n            qty: prod.qty + 1\n          } : prod)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, { ...item,\n            qty: 1\n          }]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default foodReducer;","map":{"version":3,"sources":["C:/Users/91962/FoodStore/food_store/src/redux/Food/food-reducer.js"],"names":["actionTypes","foodReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","inCart","find","prod","id","map","qty","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA2BC,MAA3B,KAAoC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAW,CAACM,WAAjB;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB,CADJ,CAEI;;AACA,YAAMC,MAAM,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,IAAI,CAACK,EAAjB,GAAsB,IAAtB,GAA6B,KAA5D,CAAf;;AAEA,UAAIH,MAAJ,EAAY;AACR,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,IAAD,IAC1BA,IAAI,CAACC,EAAL,KAAYL,IAAI,CAACK,EAAjB,GAAsB,EAAC,GAAGD,IAAJ;AAAUG,YAAAA,GAAG,EAAEH,IAAI,CAACG,GAAL,GAAW;AAA1B,WAAtB,GAAsDH,IADhD;AAFP,SAAP;AAKH,OAND,MAOK;AACD,eAAO,EACH,GAAGT,KADA;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqB,EAAE,GAAGI,IAAL;AAAWO,YAAAA,GAAG,EAAE;AAAhB,WAArB;AAFR,SAAP;AAKH;;AAEL,SAAKd,WAAW,CAACe,gBAAjB;AACI,aAAM,EACF,GAAGb,KADD;AAEFC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBa,MAAhB,CAAuBT,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAUR,MAAM,CAACI,OAAP,CAAeI,EAAtD;AAFR,OAAN;;AAIJ;AACI,aAAOV,KAAP;AA3BR;AA8BH,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from './food-types';\r\n\r\nconst foodReducer = (state = { cartItems: [] },action)=>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n            //const existItem=state.cartItems.find(prod=>prod.id===action.payload.id);\r\n            const inCart = state.cartItems.find((prod) => prod.id === item.id ? true : false);\r\n            \r\n            if (inCart) {\r\n                return {\r\n                    ...state,\r\n                    cartItems:state.cartItems.map((prod) =>\r\n                        prod.id === item.id ? {...prod, qty: prod.qty + 1 } : prod) \r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, { ...item, qty: 1 }]\r\n                    \r\n                }\r\n            }\r\n            \r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter(item=>item.id!==action.payload.id),\r\n            };\r\n        default: \r\n            return state;       \r\n    }\r\n\r\n}\r\n\r\nexport default foodReducer;"]},"metadata":{},"sourceType":"module"}